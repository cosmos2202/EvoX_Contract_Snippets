{"ast":null,"code":"\"use strict\";\n\nmodule.exports = CSSselect;\nvar Pseudos = require(\"./lib/pseudos.js\"),\n  DomUtils = require(\"domutils\"),\n  findOne = DomUtils.findOne,\n  findAll = DomUtils.findAll,\n  getChildren = DomUtils.getChildren,\n  removeSubsets = DomUtils.removeSubsets,\n  falseFunc = require(\"boolbase\").falseFunc,\n  compile = require(\"./lib/compile.js\"),\n  compileUnsafe = compile.compileUnsafe,\n  compileToken = compile.compileToken;\nfunction getSelectorFunc(searchFunc) {\n  return function select(query, elems, options) {\n    if (typeof query !== \"function\") query = compileUnsafe(query, options, elems);\n    if (!Array.isArray(elems)) elems = getChildren(elems);else elems = removeSubsets(elems);\n    return searchFunc(query, elems);\n  };\n}\nvar selectAll = getSelectorFunc(function selectAll(query, elems) {\n  return query === falseFunc || !elems || elems.length === 0 ? [] : findAll(query, elems);\n});\nvar selectOne = getSelectorFunc(function selectOne(query, elems) {\n  return query === falseFunc || !elems || elems.length === 0 ? null : findOne(query, elems);\n});\nfunction is(elem, query, options) {\n  return (typeof query === \"function\" ? query : compile(query, options))(elem);\n}\n\n/*\n\tthe exported interface\n*/\nfunction CSSselect(query, elems, options) {\n  return selectAll(query, elems, options);\n}\nCSSselect.compile = compile;\nCSSselect.filters = Pseudos.filters;\nCSSselect.pseudos = Pseudos.pseudos;\nCSSselect.selectAll = selectAll;\nCSSselect.selectOne = selectOne;\nCSSselect.is = is;\n\n//legacy methods (might be removed)\nCSSselect.parse = compile;\nCSSselect.iterate = selectAll;\n\n//hooks\nCSSselect._compileUnsafe = compileUnsafe;\nCSSselect._compileToken = compileToken;","map":null,"metadata":{},"sourceType":"script"}